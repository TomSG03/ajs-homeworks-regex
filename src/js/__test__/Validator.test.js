import Validator from '../Validator';

test('Test valid nikName', () => {

});

test.each([
  ['Egorov-007s', true],
  ['Egorov_007s', true],
  ['Я-Egorov-007s', 'Логин должен содержать только латинские буквы, символы тире -, подчёркивания _ и цифры (0-9)'],
  ['-Egorov-007s', 'Логин не может начинаться цифрами, символами подчёркивания или тире'],
  ['_Egorov-007s', 'Логин не может начинаться цифрами, символами подчёркивания или тире'],
  ['007-Egorov', 'Логин не может начинаться цифрами, символами подчёркивания или тире'],
  ['Egorov-0077s', 'Логин не может содержать подряд более трёх цифр'],
  ['Egorov-007', 'Логин не может заканчиваться цифрами, символами подчёркивания или тире'],
  ['Egorov-', 'Логин не может заканчиваться цифрами, символами подчёркивания или тире'],
  ['Egorov_', 'Логин не может заканчиваться цифрами, символами подчёркивания или тире'],
])(
  'return healht status',
  (name, expected) => {
    const check = new Validator();
    expect(check.validateUsername(name)).toBe(expected);
  },
);
